name: 部署博客到 GitHub Pages

on:
  push:
    branches: [ main ]
    paths: 
      - 'docs/**'
      - 'scripts/**'
      - 'templates/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 生成靜態站點
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'admin/package-lock.json'

      - name: Install dependencies
        run: |
          cd admin
          npm ci

      - name: Generate static site
        run: |
          cd admin
          npm run generate-static
        env:
          SUPABASE_URL: https://bvdgbnlzfyygosqtknaw.supabase.co
          SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ2ZGdibmx6Znl5Z29zcXRrbmF3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ0NzM3OTQsImV4cCI6MjA3MDA0OTc5NH0.OYPJoXN9LNQuIfyWyDXs0V2BvdbS7Rkw-mXcVskrv4g

      - name: Optimize images
        run: |
          # 安裝圖片優化工具
          npm install -g imagemin-cli imagemin-webp imagemin-mozjpeg imagemin-pngquant
          
          # 優化圖片
          find docs/assets/images -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | xargs -I {} sh -c 'imagemin {} --out-dir=$(dirname {}) --plugin=mozjpeg --plugin=pngquant'
          find docs/assets/images -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | xargs -I {} sh -c 'imagemin {} --out-dir=$(dirname {}) --plugin=webp'
        continue-on-error: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

  # 部署到 GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 發送通知（可選）
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ 博客部署成功！"
            echo "🌐 訪問地址: https://xiaonaofua.github.io/blog2/"
          else
            echo "❌ 博客部署失敗！"
            echo "請檢查部署日誌。"
          fi